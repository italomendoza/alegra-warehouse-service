name: Laravel CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:10.6
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
    - uses: actions/checkout@v4

    - name: Copy .env
      run: cp .env.example .env

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'

    - name: Install Dependencies
      run: |
        composer install --prefer-dist --no-progress --no-suggest

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create Database
      run: |
        mysql -e 'CREATE DATABASE IF NOT EXISTS laravel;' -uroot -ppassword -h127.0.0.1

    # - name: Set up Database Connection and Run Migrations
    #   env:
    #     DB_HOST: '127.0.0.1'
    #     DB_PORT: '3306'
    #     DB_DATABASE: 'laravel'
    #     DB_USERNAME: 'root'
    #     DB_PASSWORD: 'password'
    #   run: |
    #     php artisan config:clear
    #     php artisan migrate


    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Configurar AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR ${{ secrets.AWS_REGION }}
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registries: '905418450006'
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Docker Login to ECR
      uses: docker/login-action@v3
      with:
        registry: ${{ steps.login-ecr.outputs.registry }}

    - name: Build Image
      uses: docker/build-push-action@v5
      id: build-image
      with:
        context: .
        provenance: false
        file: ./Dockerfile
        push: false
        tags: ${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: ''

